version: "3"

services:
  # Defines a service name
  app:
    build:
      # Sets the build context to the current directory
      context: .
      # Specifies the Dockerfile to use for the build
      dockerfile: .docker/Dockerfile.app
      args:
        ARG_BUILD_FROM: $BUILD_FROM
        ARG_IMAGE_VERSION: $IMAGE_VERSION
    # Sets the image name for the built image
    image: $IMAGE_NAME:$IMAGE_TAG
    container_name: $CONTAINER_NAME
    # Sets the hostname of the container
    hostname: $CONTAINER_HOSTNAME
    entrypoint:
      # Specifies the command to be executed when the container is run
      - /bin/bash
      - "$APP_INSTALL_ROOT/scripts/entrypoint.sh"
    command:
      # Specifies the command to be executed when the container is run
      - "serve"
    # set the environment variables
    environment:
      USER_UID: $CONTAINER_USER_UID
      # To avoid incorrect CUDA driver version errors
      NVIDIA_DISABLE_REQUIRE: True
    ulimits:
      # Sets the stack size and memory lock limits
      stack: 67108864
      memlock: -1
    # Allows the container to use the host's IPC namespace
    ipc: $CONTAINER_IPC
    ports:
      - "$HOST_WEB_SVC_PORT:$CONTAINER_WEB_SVC_PORT"
    volumes:
      # Maps directories from the host to the container
      - "$HOST_SCRIPTS_DIR:$APP_INSTALL_ROOT/scripts"
      - "$HOST_OLLAMA_DIR:$CONTAINER_OLLAMA_DIR"
    deploy:
      resources:
        reservations:
          devices:
            # Reserves the specified GPU for the container
            - driver: nvidia
              device_ids: ["${CONTAINER_CUDA_DEVICE_ID}"]
              capabilities: [gpu]
networks:
  default:
    # Sets the name of the default network and makes it external
    name: $CONTAINER_NETWORK_NAME
    external: true
